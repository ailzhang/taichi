[I 04/20/23 19:06:35.181 1817415] [compile_to_offloads.cpp:operator()@23] [composite_train_fw_stack_c78_0] Bit struct stores optimized:
kernel {
$0 = offloaded range_for(0, 8192) grid_dim=2624 block_dim=256
body {
  <i32> $1 = loop $0 index 0
  <i32> $2 = const 0
  <*gen> $3 = get root [S0root][root]
  <*gen> $4 = [S0root][root]::lookup($3, $2) activate = false
  <*gen> $5 = get child [S0root->S5dense] $4
  <i32> $6 = const 3
  <i32> $7 = mul $1 $6
  <*gen> $8 = [S5dense][dense]::lookup($5, $7) activate = false
  <*i64> $9 = get child [S5dense->S6place<i64>] $8
  <i64> $10 = global load $9
  <i32> $11 = cast_value<i32> $10
  <f32> $12 = alloca
  <i32> $13 = const 2
  $14 : for in range($2, $13) block_dim=adaptive {
    <i32> $15 = loop $14 index 0
    <*gen> $16 = get child [S0root->S1dense] $4
    <*gen> $17 = [S1dense][dense]::lookup($16, $15) activate = false
    <*f32> $18 = get child [S1dense->S2place<f32>] $17
    <f32> $19 = global load $18
    <f32> $20 = local load [$12]
    <f32> $21 = add $20 $19
    <f32> $22 : local store [$12 <- $21]
  }
  <f32> $23 = local load [$12]
  <*gen> $24 = get child [S0root->S7dense] $4
  <i32> $25 = mul $11 $6
  <*gen> $26 = [S7dense][dense]::lookup($24, $25) activate = false
  <*f32> $27 = get child [S7dense->S8place<f32>] $26
  $28 : global store [$27 <- $23]
}
}
